% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbn-package.R
\name{dbn-options}
\alias{dbn-options}
\title{DBN Package Options}
\description{
The dbn package uses several options to control behavior,
particularly for toggling between R and C++ implementations.
}
\section{Performance Options}{

\describe{
\item{dbn.use_cpp_update_ab}{Logical (default: TRUE). Use C++ implementation
for updating A and B matrices in HMM models.}
\item{dbn.use_cpp_build_f}{Logical (default: TRUE). Use C++ implementation
for building design matrix F in low-rank models.}
\item{dbn.use_batch_ffbs}{Logical (default: TRUE). Use batch FFBS updates
when available for better performance.}
\item{dbn.use_cpp_stability}{Logical (default: TRUE). Use C++ implementations
for matrix stability functions (spectral radius, positive definite checks).}
\item{dbn.use_ffbs_dlm_cpp}{Logical (default: TRUE). Use C++ implementation
of Forward-Filter Backward-Sample for dynamic linear models.}
\item{dbn.use_ffbs_cpp}{Logical (default: TRUE). Use C++ implementation
of time-varying FFBS algorithm.}
\item{dbn.use_cpp_ranklik}{Logical (default: TRUE). Use C++ implementation
for rank likelihood sampling (significant speedup on large networks).}
}
}

\section{Setting Options}{

Options can be set using \code{options()}:
\preformatted{
# Disable C++ rank likelihood (e.g., for debugging)
options(dbn.use_cpp_ranklik = FALSE)

# Disable all C++ implementations
options(
  dbn.use_cpp_update_ab = FALSE,
  dbn.use_cpp_build_f = FALSE,
  dbn.use_batch_ffbs = FALSE,
  dbn.use_cpp_stability = FALSE,
  dbn.use_ffbs_dlm_cpp = FALSE,
  dbn.use_ffbs_cpp = FALSE,
  dbn.use_cpp_ranklik = FALSE
)
}
}

